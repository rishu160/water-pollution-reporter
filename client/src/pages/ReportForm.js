import React, { useState } from 'react';
import { useForm } from 'react-hook-form';
import { toast } from 'react-toastify';
import axios from 'axios';

const ReportForm = () => {
  const { register, handleSubmit, reset, formState: { errors } } = useForm();
  const [photos, setPhotos] = useState([]);
  const [location, setLocation] = useState(null);
  const [loading, setLoading] = useState(false);

  const getCurrentLocation = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          setLocation({
            latitude: position.coords.latitude,
            longitude: position.coords.longitude
          });
          toast.success('рд▓реЛрдХреЗрд╢рди рдорд┐рд▓ рдЧрдИ!');
        },
        (error) => {
          toast.error('рд▓реЛрдХреЗрд╢рди рдирд╣реАрдВ рдорд┐рд▓ рд╕рдХреАред рдХреГрдкрдпрд╛ рдореИрдиреНрдпреБрдЕрд▓ рд░реВрдк рд╕реЗ рджреЗрдВред');
        }
      );
    } else {
      toast.error('рдЖрдкрдХрд╛ рдмреНрд░рд╛рдЙрдЬрд╝рд░ рдЬреАрдкреАрдПрд╕ рд╕рдкреЛрд░реНрдЯ рдирд╣реАрдВ рдХрд░рддрд╛ред');
    }
  };

  const handlePhotoChange = (e) => {
    const files = Array.from(e.target.files);
    if (files.length > 5) {
      toast.error('рдЕрдзрд┐рдХрддрдо 5 рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ');
      return;
    }
    setPhotos(files);
  };

  const onSubmit = async (data) => {
    if (!location) {
      toast.error('рдХреГрдкрдпрд╛ рд▓реЛрдХреЗрд╢рди рджреЗрдВ');
      return;
    }

    setLoading(true);
    const formData = new FormData();
    
    // Add form data
    Object.keys(data).forEach(key => {
      formData.append(key, data[key]);
    });
    
    // Add location and reporter info
    formData.append('location', JSON.stringify(location));
    formData.append('reportedBy', JSON.stringify({
      name: data.reporterName,
      phone: data.reporterPhone,
      email: data.reporterEmail
    }));
    
    // Add photos
    photos.forEach(photo => {
      formData.append('photos', photo);
    });

    try {
      await axios.post('/api/reports', formData, {
        headers: { 'Content-Type': 'multipart/form-data' }
      });
      
      toast.success('рд░рд┐рдкреЛрд░реНрдЯ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕рдмрдорд┐рдЯ рд╣реЛ рдЧрдИ!');
      reset();
      setPhotos([]);
      setLocation(null);
    } catch (error) {
      toast.error('рд░рд┐рдкреЛрд░реНрдЯ рд╕рдмрдорд┐рдЯ рдХрд░рдиреЗ рдореЗрдВ рд╕рдорд╕реНрдпрд╛ рд╣реБрдИ');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container">
      <div className="card">
        <h2>ЁЯЪи рдкреНрд░рджреВрд╖рдг рд░рд┐рдкреЛрд░реНрдЯ рдХрд░реЗрдВ</h2>
        <form onSubmit={handleSubmit(onSubmit)}>
          
          <div className="form-group">
            <label>рд░рд┐рдкреЛрд░реНрдЯ рдХрд╛ рд╢реАрд░реНрд╖рдХ *</label>
            <input
              type="text"
              className="form-control"
              {...register('title', { required: 'рд╢реАрд░реНрд╖рдХ рдЖрд╡рд╢реНрдпрдХ рд╣реИ' })}
              placeholder="рдЬреИрд╕реЗ: рддрд╛рд▓рд╛рдм рдореЗрдВ рдХрдЪрд░рд╛ рдФрд░ рдЧрдВрджрдЧреА"
            />
            {errors.title && <span style={{color: 'red'}}>{errors.title.message}</span>}
          </div>

          <div className="form-group">
            <label>рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╡рд░рдг *</label>
            <textarea
              className="form-control"
              rows="4"
              {...register('description', { required: 'рд╡рд┐рд╡рд░рдг рдЖрд╡рд╢реНрдпрдХ рд╣реИ' })}
              placeholder="рд╕рдорд╕реНрдпрд╛ рдХрд╛ рд╡рд┐рд╕реНрддреГрдд рд╡рд┐рд╡рд░рдг рджреЗрдВ..."
            />
            {errors.description && <span style={{color: 'red'}}>{errors.description.message}</span>}
          </div>

          <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px'}}>
            <div className="form-group">
              <label>рдкреНрд░рджреВрд╖рдг рдХрд╛ рд╕реНрддрд░ *</label>
              <select className="form-control" {...register('pollutionLevel', { required: true })}>
                <option value="">рдЪреБрдиреЗрдВ</option>
                <option value="Low">рдХрдо</option>
                <option value="Medium">рдордзреНрдпрдо</option>
                <option value="High">рдЕрдзрд┐рдХ</option>
                <option value="Critical">рдЧрдВрднреАрд░</option>
              </select>
            </div>

            <div className="form-group">
              <label>рдЬрд▓ рдирд┐рдХрд╛рдп рдХрд╛ рдкреНрд░рдХрд╛рд░ *</label>
              <select className="form-control" {...register('waterBodyType', { required: true })}>
                <option value="">рдЪреБрдиреЗрдВ</option>
                <option value="River">рдирджреА</option>
                <option value="Lake">рдЭреАрд▓</option>
                <option value="Pond">рддрд╛рд▓рд╛рдм</option>
                <option value="Canal">рдирд╣рд░</option>
                <option value="Stream">рдирд╛рд▓рд╛</option>
                <option value="Other">рдЕрдиреНрдп</option>
              </select>
            </div>
          </div>

          <div className="form-group">
            <label>рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ (рдЕрдзрд┐рдХрддрдо 5)</label>
            <input
              type="file"
              className="form-control"
              multiple
              accept="image/*"
              onChange={handlePhotoChange}
            />
            {photos.length > 0 && (
              <div style={{marginTop: '10px', color: '#666'}}>
                {photos.length} рдлреЛрдЯреЛ рдЪреБрдиреА рдЧрдИ
              </div>
            )}
          </div>

          <div className="form-group">
            <label>рд╕реНрдерд╛рди рдХреА рдЬрд╛рдирдХрд╛рд░реА *</label>
            <div style={{display: 'flex', gap: '10px', alignItems: 'center'}}>
              <button
                type="button"
                className="btn btn-success"
                onClick={getCurrentLocation}
              >
                ЁЯУН рд╡рд░реНрддрдорд╛рди рд╕реНрдерд╛рди рд▓реЗрдВ
              </button>
              {location && (
                <span style={{color: 'green'}}>
                  тЬЕ рд╕реНрдерд╛рди рдорд┐рд▓ рдЧрдИ ({location.latitude.toFixed(4)}, {location.longitude.toFixed(4)})
                </span>
              )}
            </div>
            <input
              type="text"
              className="form-control"
              {...register('address')}
              placeholder="рдкрддрд╛ рдпрд╛ рд╕реНрдерд╛рди рдХрд╛ рдирд╛рдо (рд╡реИрдХрд▓реНрдкрд┐рдХ)"
              style={{marginTop: '10px'}}
            />
          </div>

          <h3>рд░рд┐рдкреЛрд░реНрдЯрд░ рдХреА рдЬрд╛рдирдХрд╛рд░реА</h3>
          
          <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px'}}>
            <div className="form-group">
              <label>рдирд╛рдо</label>
              <input
                type="text"
                className="form-control"
                {...register('reporterName')}
                placeholder="рдЖрдкрдХрд╛ рдирд╛рдо"
              />
            </div>

            <div className="form-group">
              <label>рдлреЛрди рдирдВрдмрд░</label>
              <input
                type="tel"
                className="form-control"
                {...register('reporterPhone')}
                placeholder="рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░"
              />
            </div>
          </div>

          <div className="form-group">
            <label>рдИрдореЗрд▓</label>
            <input
              type="email"
              className="form-control"
              {...register('reporterEmail')}
              placeholder="рдИрдореЗрд▓ рдкрддрд╛ (рд╡реИрдХрд▓реНрдкрд┐рдХ)"
            />
          </div>

          <button
            type="submit"
            className="btn btn-primary"
            disabled={loading}
            style={{width: '100%', padding: '15px', fontSize: '18px'}}
          >
            {loading ? 'тП│ рд╕рдмрдорд┐рдЯ рд╣реЛ рд░рд╣реА рд╣реИ...' : 'ЁЯУд рд░рд┐рдкреЛрд░реНрдЯ рд╕рдмрдорд┐рдЯ рдХрд░реЗрдВ'}
          </button>
        </form>
      </div>
    </div>
  );
};

export default ReportForm;